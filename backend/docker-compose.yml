# Docker Compose 配置（生產環境使用）
# 
# 當前開發環境使用 Supabase
# 此文件用於未來生產部署
#
version: '3.8'

services:
  # PostgreSQL 數據庫
  postgres:
    image: postgres:16-alpine
    container_name: happyshare-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-ChangeMeInProduction}
      POSTGRES_DB: social_media
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - happyshare-network

  # NestJS 後端 API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: happyshare-backend
    restart: always
    environment:
      DATABASE_URL: postgresql://postgres:${DB_PASSWORD:-ChangeMeInProduction}@postgres:5432/social_media?schema=public
      JWT_SECRET: ${JWT_SECRET:-ChangeMeInProduction}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      NODE_ENV: production
      PORT: 5000
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - happyshare-network
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npm run start:prod
      "

  # Redis (未來可選 - 用於緩存和 Session)
  # redis:
  #   image: redis:7-alpine
  #   container_name: happyshare-redis
  #   restart: always
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - happyshare-network

volumes:
  postgres_data:
    driver: local
  # redis_data:
  #   driver: local

networks:
  happyshare-network:
    driver: bridge
